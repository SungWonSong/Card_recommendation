*, *:before, *:after {
    border: 0;
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

:root {
    font-size: 18px;
    --cardW: 8em;
    --cardH: 14em;
    --cardZInc: 2em;
}

body {
    font: 1em "Open Sans", sans-serif;
    height: 100vh;
    overflow-x: hidden;
    background-color: #000;
}

main {
    display: block;
    margin: auto;
    position: relative;
}

.cards, .stack {
    transform-style: preserve-3d;
}

.cards {
    --scroll: 0;
    display: grid;
    grid-template-rows: repeat(auto-fill, var(--cardH));
    grid-template-columns: var(--cardW);
    grid-row-gap: 8em; /* 세로 간격 조정 */
    grid-column-gap: var(--cardColumnGap); /* 가로 간격 조정 */
    position: fixed;
    top: 40%;
    left: 65%;
    transform: translateX(-50%) rotateX(45deg) rotateZ(45deg) translateY(var(--scroll));
    transform-origin: 50% 0;
}

.stack {
    display: block;
    position: relative;
}

.contents {
    color: #790101;
    font-size: 0.5em;
    line-height: 1.25;
    -webkit-font-smoothing: antialiased;
}

.stack:nth-of-type(even) .contents {
    color: #fff;
}

.contents h2 {
    color: rgb(18, 19, 19);
    font-size: 2em;
    font-weight: 400;
    margin-bottom: 0.25em;
}

.contents span {
    margin-right: 0.75em;
}

.city {
    margin-top: 11.75em;
}

.stack:nth-of-type(4n + 2) .card {
    background-position: 0 100%;
}

.stack:nth-of-type(4n + 3) .card {
    background-position: 100% 0;
}

.stack:nth-of-type(4n + 4) .card {
    background-position: 100% 100%;
}

.stack:nth-child(8n + 5) .card,
.stack:nth-child(8n + 6) .card,
.stack:nth-child(8n + 7) .card,
.stack:nth-child(8n + 8) .card {
    filter: hue-rotate(90deg);
    -webkit-filter: hue-rotate(90deg);
}

.stack:nth-child(12n + 9) .card,
.stack:nth-child(12n + 10) .card,
.stack:nth-child(12n + 11) .card,
.stack:nth-child(12n + 12) .card {
    filter: hue-rotate(180deg);
    -webkit-filter: hue-rotate(180deg);
}

.stack:hover .top, .stack:focus .top {
    transform: translateZ(calc(var(--cardZInc) * 4));
}

.stack:hover .mid-top, .stack:focus .mid-top {
    transform: translateZ(calc(var(--cardZInc) * 3));
}

.stack:hover .mid-bottom, .stack:focus .mid-bottom {
    transform: translateZ(calc(var(--cardZInc) * 2));
}

.stack:hover .bottom, .stack:focus .bottom {
    transform: translateZ(var(--cardZInc));
}

.stack:hover .shadow, .stack:focus .shadow {
    filter: blur(5px);
    -webkit-filter: blur(5px);
    opacity: 0.2;
}

.card {
    background-size: cover;
    /* box-shadow: -1px -1px 0 rgba(0, 0, 0, 0.2) inset; */
    color: #000;
    padding: 0.75em;
    position: absolute;
    transition: all 0.3s;
    width: 8.87em; /* 여기서 너비 값을 조정합니다 */
    height: 11.14em; /* 여기서 높이 값을 조정합니다 */
}

.card-content {
    position: relative;
    display: inline-block;
}

.card-content img {
    display: block;
    max-width: 100%;
    height: auto;
}

.card-content h3 {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    margin: 0;
    padding: 0.5em;
    background-color: none;
    font-size: 0.85em;
    text-align: center;
    color: #2c0101;
}
.top {
    transform: translateZ(4px);
    z-index: 4;
}

.mid-top {
    transform: translateZ(3px);
    z-index: 3;
}

.mid-bottom {
    transform: translateZ(2px);
    z-index: 2;
}

.bottom {
    transform: translateZ(1px);
    z-index: 1;
}

.shadow {
    background: #000;
    filter: blur(2px);
    -webkit-filter: blur(2px);
    opacity: 0.4;
}

@media screen and (min-width: 361px) {
    .cards {
        grid-template-columns: repeat(2, var(--cardW));
    }
}

@media screen and (min-width: 641px) {
    .cards {
        grid-template-columns: repeat(3, var(--cardW));
    }
}

@media screen and (min-width: 961px) {
    .cards {
        grid-template-columns: repeat(4, var(--cardW));
    }
}

@media screen and (min-width: 1281px) {
    .cards {
        grid-template-columns: repeat(5, var(--cardW));
    }
}

@media screen and (prefers-color-scheme: dark) {
    body {
        background: #000000;
    }
}